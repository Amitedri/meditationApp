[{"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\index.js":"1","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\App.js":"2","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Intro\\index.js":"3","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\index.js":"4","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\MPlayer\\index.js":"5","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Meditation\\index.js":"6","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Login\\index.js":"7","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Register\\index.js":"8","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Errors\\index.js":"9","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\History\\history.js":"10","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Steps\\steps.js":"11","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Register\\RegisterUtils.js":"12","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Login\\LoginUtils.js":"13","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Affirmations\\index.js":"14","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\HowTo\\index.js":"15","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Info\\index.js":"16","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Timer\\index.js":"17","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Charts\\index.js":"18","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Intro\\Utils.js":"19","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\MobileMenu.js":"20","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\Utils.js":"21","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\Utils\\useToken.js":"22","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\Utils\\redirect.js":"23","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Affirmations\\Utils.js":"24","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\MPlayer\\Utils.js":"25","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\HowTo\\Utils.js":"26","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\components.js":"27","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Timer\\Utils.js":"28","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Timer\\components.js":"29","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\HowTo\\components.js":"30"},{"size":214,"mtime":1612107666290,"results":"31","hashOfConfig":"32"},{"size":1645,"mtime":1615414223008,"results":"33","hashOfConfig":"32"},{"size":2286,"mtime":1615380250141,"results":"34","hashOfConfig":"32"},{"size":629,"mtime":1615718958542,"results":"35","hashOfConfig":"32"},{"size":1756,"mtime":1615380506460,"results":"36","hashOfConfig":"32"},{"size":865,"mtime":1615414345566,"results":"37","hashOfConfig":"32"},{"size":2116,"mtime":1615816424262,"results":"38","hashOfConfig":"32"},{"size":2647,"mtime":1615816410167,"results":"39","hashOfConfig":"32"},{"size":236,"mtime":1615379724564,"results":"40","hashOfConfig":"32"},{"size":1090,"mtime":1611766052000,"results":"41","hashOfConfig":"32"},{"size":955,"mtime":1611766052000,"results":"42","hashOfConfig":"32"},{"size":1256,"mtime":1612479051630,"results":"43","hashOfConfig":"32"},{"size":682,"mtime":1615380312671,"results":"44","hashOfConfig":"32"},{"size":947,"mtime":1615477854235,"results":"45","hashOfConfig":"32"},{"size":4628,"mtime":1615814663850,"results":"46","hashOfConfig":"32"},{"size":1546,"mtime":1615380050494,"results":"47","hashOfConfig":"32"},{"size":3656,"mtime":1615816475651,"results":"48","hashOfConfig":"32"},{"size":931,"mtime":1615480266456,"results":"49","hashOfConfig":"32"},{"size":1731,"mtime":1615380191039,"results":"50","hashOfConfig":"32"},{"size":1587,"mtime":1615481141438,"results":"51","hashOfConfig":"32"},{"size":1031,"mtime":1615234780373,"results":"52","hashOfConfig":"32"},{"size":406,"mtime":1613239337620,"results":"53","hashOfConfig":"32"},{"size":126,"mtime":1614881686651,"results":"54","hashOfConfig":"32"},{"size":1158,"mtime":1615477849003,"results":"55","hashOfConfig":"32"},{"size":765,"mtime":1615380505350,"results":"56","hashOfConfig":"32"},{"size":1996,"mtime":1615814756619,"results":"57","hashOfConfig":"32"},{"size":2329,"mtime":1615719110445,"results":"58","hashOfConfig":"32"},{"size":262,"mtime":1615415519299,"results":"59","hashOfConfig":"32"},{"size":30,"mtime":1615477743269,"results":"60","hashOfConfig":"32"},{"size":230,"mtime":1615720503839,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"jof006",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\index.js",[],["133","134"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\App.js",["135"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n//Components\nimport Intro from './components/Intro/';\nimport Navbar from './components/Navbar';\nimport Meditation from './components/Meditation';\nimport particlesConfig from './particlesjs.json';\nimport HowTo from './components/HowTo';\nimport Info from './components/Info';\nimport useToken from './Utils/useToken';\nimport redirect from './Utils/redirect';\n\nconst App = () => {\n  const { token, deleteToken } = useToken();\n\n  // Particles effect will start after window.onLoad\n  React.useEffect(() => {\n    let particlesJS = '';\n    const setParticlesEffect = () => {\n      try {\n        particlesJS = window.particlesJS;\n        particlesJS('particles-js', particlesConfig);\n      } catch (err) {\n        setParticlesEffect();\n        return false;\n      }\n    };\n  }, []);\n\n  const Main = () => {\n    return (\n      <React.Fragment>\n        <Intro redirect={redirect} isAuth={token} logout={deleteToken} />\n        <HowTo />\n        <Info />\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar isAuth={token} logout={deleteToken} redirect={redirect} />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Main />} />\n          <Route exact path=\"/howToMeditate\" render={() => <HowTo />} />\n          <Route exact path=\"/info\" render={() => <Info />} />\n          <Route exact path=\"/meditate\" render={() => (token ? <Meditation isAuth={token} logout={deleteToken} /> : <Main />)} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Intro\\index.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\index.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\MPlayer\\index.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Meditation\\index.js",["136","137"],"import React from 'react';\nimport './Meditation.css';\nimport MobileNav from '../Navbar/MobileMenu';\n//Components\nimport Timer from '../Timer';\nimport Affirmations from '../Affirmations';\nimport Mplayer from '../MPlayer';\nimport Chart from '../Charts';\n\nconst PersonalPage = ({ isAuth, logout }) => {\n  const [session, setSession] = React.useState(null);\n  const getSessionInfo = (data) => {\n    return setSession(() => data);\n  };\n  return (\n    <div className=\"meditationContainer\">\n      <div className=\"mainContainer\">\n        <div className=\"circle player\">\n          <Mplayer />\n        </div>\n        <div className=\"circle timer\">\n          <Timer getSessionInfo={getSessionInfo} />\n        </div>\n        <div className=\"circle affirm\">\n          <Affirmations />\n        </div>\n      </div>\n      <Chart />\n    </div>\n  );\n};\n\nexport default PersonalPage;\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Login\\index.js",["138"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Register\\index.js",["139","140"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Errors\\index.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\History\\history.js",[],["141","142"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Steps\\steps.js",[],["143","144"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Register\\RegisterUtils.js",["145"],"export const validatePasswords = (pass1, pass2, setErrors) => {\n  const passwordMatch = pass1 === pass2;\n  const passwordLength = pass1.length > 5 && pass2.length > 5;\n  if (!pass1 || !pass2) {\n    const res = {\n      success: false,\n      message: 'Passwords fields are required.',\n    };\n    setErrors(() => res.message);\n    return false;\n  }\n  if (!passwordMatch) {\n    const res = {\n      success: false,\n      message: 'Passwords must match.',\n    };\n    setErrors(() => res.message);\n    return false;\n  }\n  if (!passwordLength) {\n    const res = {\n      success: false,\n      message: 'Passwords length should be at least 6 chars length.',\n    };\n    setErrors(() => res.message);\n    return false;\n  }\n  return true;\n};\nexport const validateUsername = (username, setErrors) => {\n  if (username.length < 1) {\n    const res = {\n      success: false,\n      message: 'Please enter a username',\n    };\n    setErrors(() => res.message);\n    return false;\n  }\n  const res = {\n    success: true,\n  };\n  return true;\n};\nexport const handleClosePopup = (event) => {\n  const ev = document.createEvent('HTMLEvents');\n  ev.initEvent('closeModal', true, false);\n  event.target.dispatchEvent(ev) || document.querySelector(\".introContainer\").dispatchEvent(ev)\n};\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Login\\LoginUtils.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Affirmations\\index.js",["146"],"import React from 'react';\nimport './Affirmations.css';\nimport close from './assets/close.svg';\nimport { removeAffirmation, mapAffirmations, addAffirmation } from './Utils';\nconst Affirmations = () => {\n  const [affirmation, setAffirmation] = React.useState('');\n  const [affirmations, setAffirmations] = React.useState(['Affirmations can help to set new beliefs in our subconsciousness !']);\n  return (\n    <div className=\"affirmationsWrapper\">\n      <div className=\"affirmationsHeader\">\n        <span>Add Affirmations!</span>\n      </div>\n      <div className=\"affirmationsControllers\">\n        <input type=\"text\" onInput={(event) => setAffirmation(event.target.value)} />\n        <button onClick={() => addAffirmation(setAffirmations, affirmation)}>+</button>\n      </div>\n      <div className=\"affirmationsTextContainer dragscroll\">{mapAffirmations(affirmations, setAffirmations, close)}</div>\n    </div>\n  );\n};\n\nexport default Affirmations;\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\HowTo\\index.js",["147"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Info\\index.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Timer\\index.js",["148","149","150","151","152","153","154","155","156","157"],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Charts\\index.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Intro\\Utils.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\MobileMenu.js",["158","159","160","161"],"import React from 'react';\r\nimport redirect from '../../Utils/redirect';\r\nimport './Navbar.css';\r\nimport { scrollToElem, showModal } from './Utils';\r\nconst MobileNav = (isAuth, logout, isAtMain) => {  \r\n  const Login = (\r\n    <button id=\"register\" className=\"navItem\" onClick={(event) => showModal(event, 'showModal')}>\r\n      Login / Rgister\r\n    </button>\r\n  );\r\n  const Logout = (\r\n    <button className=\"navItem\" onClick={(event) => logout()}>\r\n      <span id=\"register\">Logout</span>\r\n    </button>\r\n  );\r\n  const handleMeditationClick = (event) => {\r\n    if (isAuth && !isAtMain() || isAuth && isAtMain()) {\r\n      redirect('/meditate');\r\n    }\r\n    if (!isAuth && isAtMain()) {\r\n      showModal(event, 'showModal');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mobileNavContainer\">\r\n      <div className=\"mobileNavMenu\">\r\n        {isAuth ? Logout : Login}\r\n        <div className=\"navItem\" onClick={() => (isAtMain() ? scrollToElem('top') : (window.location = '/'))}>\r\n          <span>Home</span>\r\n        </div>\r\n        <div className=\"navItem\" onClick={() => (isAtMain() ? scrollToElem('mid') : (window.location = '/howToMeditate'))}>\r\n          <span>How to Meditate</span>\r\n        </div>\r\n        <div className=\"navItem\" onClick={() => (isAtMain() ? scrollToElem('bottom') : (window.location = '/info'))}>\r\n          <span>The Science</span>\r\n        </div>\r\n        <div className=\"navItem\" id=\"register\" onClick={(event) => handleMeditationClick(event)}>\r\n          <span>Meditate</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MobileNav;\r\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\Utils.js",["162"],"export const scrollToElem = (elem) => {\r\n  const top = document.querySelector('.introContainer');\r\n  const mid = document.querySelector('.pageContainer');\r\n  const bottom = document.querySelector('.infoContainer');\r\n\r\n  const execScroll = (elem) => {\r\n    switch (elem) {\r\n      case 'top':\r\n        top.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'nearest',\r\n        });\r\n      case 'mid':\r\n        mid.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'nearest',\r\n        });\r\n        break;\r\n      case 'bottom':\r\n        bottom.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'nearest',\r\n        });\r\n        break;\r\n      default:\r\n        top.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'nearest',\r\n        });\r\n        break;\r\n    }\r\n  };\r\n  return execScroll(elem);\r\n};\r\nexport const showModal = (event, modal) => {\r\n  const ev = document.createEvent('HTMLEvents');\r\n  ev.initEvent(modal, true, false);\r\n  event.target.dispatchEvent(ev);\r\n};\r\n\r\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\Utils\\useToken.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\Utils\\redirect.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Affirmations\\Utils.js",["163"],"import React from 'react';\r\nimport Affirmations from '.';\r\nexport const removeAffirmation = (event, setAffirmations, affirmations) => {\r\n  const newAffirmations = affirmations.filter((affirmation) => {\r\n    const elem = event.target.parentNode.parentNode.children[0];\r\n    console.log(event.target.parentNode.parentNode);\r\n    return affirmation !== elem.textContent;\r\n  });\r\n  setAffirmations(newAffirmations);\r\n};\r\nexport const mapAffirmations = (affirmations, setAffirmations, close) => {\r\n  if (!affirmations) {\r\n    return;\r\n  }\r\n  return affirmations.map((value, i) => {\r\n    return (\r\n      <div key={i} className=\"singleAffirmation\">\r\n        <span className=\"affirmationText\">{value}</span>\r\n        <span className=\"removeAffirmation\" onClick={(event) => removeAffirmation(event, setAffirmations, affirmations)}>\r\n          <img src={close} alt={close} />\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n};\r\nexport const addAffirmation = (setAffirmations, affirmation) => {\r\n  const elem = document.querySelector('INPUT');\r\n  if (elem.value !== '') {\r\n    setAffirmations((prevState) => [...prevState, affirmation]);\r\n    elem.value = '';\r\n  }\r\n};\r\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\MPlayer\\Utils.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\HowTo\\Utils.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Navbar\\components.js",["164"],"import React from 'react';\r\nimport redirect from '../../Utils/redirect';\r\nexport const AccountButtons = (showModal) => {\r\n  return (\r\n    <div className=\"accountControllers\">\r\n      <span className=\"loginButton\" id=\"login\" onClick={(event) => showModal(event, 'showModal')}>\r\n        Login\r\n      </span>\r\n      <span className=\"registerButton\" id=\"register\" onClick={(event) => showModal(event, 'showModal')}>\r\n        Register\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport const LogoutButton = (logout) => {\r\n  return (\r\n    <div className=\"accountControllers\">\r\n      <button className=\"buttonWrapper logout\" onClick={() => logout()}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MobileNav = (setIsOpen, menu) => {\r\n  return (\r\n    <div className=\"mobile\" onClick={(event) => setIsOpen((prevState) => !prevState)}>\r\n      <img src={menu} alt={menu} />\r\n    </div>\r\n  );\r\n};\r\nconst handleMeditateButton = (event, showModal) => {\r\n  if (window.location.pathname === '/') {\r\n    console.log('pathy');\r\n    showModal(event, 'showModal');\r\n    return;\r\n  }\r\n  window.location = '/';\r\n  return;\r\n};\r\nexport const LargeNav = (\r\n  MobileNav,\r\n  isAtMain,\r\n  scrollToElem,\r\n  isAuth,\r\n  redirect,\r\n  showModal,\r\n  LogoutButton,\r\n  AccountButtons,\r\n  isOpen,\r\n  MobileMenu,\r\n  LargeNav,\r\n  logout,\r\n  setIsOpen,\r\n  menu\r\n) => {\r\n  return (\r\n    <div className=\"navbarContainer\">\r\n      {MobileNav(setIsOpen, menu)}\r\n      <div className=\"navigationControllers\">\r\n        <button className=\"buttonWrapper\" onClick={() => (isAtMain() ? scrollToElem('top') : (window.location = '/'))}>\r\n          Home\r\n        </button>\r\n        <button className=\"buttonWrapper\" onClick={() => (isAtMain() ? scrollToElem('mid') : (window.location = '/howToMeditate'))}>\r\n          How to\r\n        </button>\r\n        <button className=\"buttonWrapper\" onClick={() => (isAtMain() ? scrollToElem('bottom') : (window.location = '/info'))}>\r\n          The Science\r\n        </button>\r\n        <button className=\"buttonWrapper\" id=\"register\" onClick={(event) => (isAuth ? redirect('/meditate') : handleMeditateButton(event, showModal))}>\r\n          Meditate\r\n        </button>\r\n      </div>\r\n      {isAuth ? LogoutButton(logout) : AccountButtons(showModal)}\r\n      {isOpen && MobileMenu(isAuth, logout, isAtMain)}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Timer\\Utils.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\Timer\\components.js",[],"C:\\Users\\root\\OneDrive\\Desktop\\meditationApp-workbranch\\meditationApp-workbranch\\src\\components\\HowTo\\components.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":25,"column":9,"nodeType":"171","messageId":"172","endLine":25,"endColumn":27},{"ruleId":"169","severity":1,"message":"173","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"174","line":11,"column":10,"nodeType":"171","messageId":"172","endLine":11,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":50,"column":9,"nodeType":"177","endLine":50,"endColumn":77},{"ruleId":"178","severity":1,"message":"179","line":23,"column":6,"nodeType":"180","endLine":23,"endColumn":14,"suggestions":"181"},{"ruleId":"175","severity":1,"message":"176","line":65,"column":35,"nodeType":"177","endLine":65,"endColumn":100},{"ruleId":"165","replacedBy":"182"},{"ruleId":"167","replacedBy":"183"},{"ruleId":"165","replacedBy":"184"},{"ruleId":"167","replacedBy":"185"},{"ruleId":"169","severity":1,"message":"186","line":39,"column":9,"nodeType":"171","messageId":"172","endLine":39,"endColumn":12},{"ruleId":"169","severity":1,"message":"187","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":27},{"ruleId":"169","severity":1,"message":"188","line":17,"column":10,"nodeType":"171","messageId":"172","endLine":17,"endColumn":20},{"ruleId":"169","severity":1,"message":"189","line":6,"column":10,"nodeType":"171","messageId":"172","endLine":6,"endColumn":20},{"ruleId":"169","severity":1,"message":"190","line":7,"column":31,"nodeType":"171","messageId":"172","endLine":7,"endColumn":50},{"ruleId":"169","severity":1,"message":"191","line":7,"column":52,"nodeType":"171","messageId":"172","endLine":7,"endColumn":62},{"ruleId":"169","severity":1,"message":"192","line":7,"column":64,"nodeType":"171","messageId":"172","endLine":7,"endColumn":74},{"ruleId":"169","severity":1,"message":"193","line":23,"column":18,"nodeType":"171","messageId":"172","endLine":23,"endColumn":27},{"ruleId":"169","severity":1,"message":"194","line":24,"column":10,"nodeType":"171","messageId":"172","endLine":24,"endColumn":30},{"ruleId":"169","severity":1,"message":"195","line":25,"column":10,"nodeType":"171","messageId":"172","endLine":25,"endColumn":24},{"ruleId":"169","severity":1,"message":"196","line":25,"column":26,"nodeType":"171","messageId":"172","endLine":25,"endColumn":43},{"ruleId":"169","severity":1,"message":"197","line":27,"column":9,"nodeType":"171","messageId":"172","endLine":27,"endColumn":20},{"ruleId":"169","severity":1,"message":"198","line":44,"column":15,"nodeType":"171","messageId":"172","endLine":44,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":17,"column":16,"nodeType":"201","messageId":"202","endLine":17,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":17,"column":31,"nodeType":"201","messageId":"202","endLine":17,"endColumn":33},{"ruleId":"199","severity":1,"message":"203","line":17,"column":31,"nodeType":"201","messageId":"202","endLine":17,"endColumn":33},{"ruleId":"199","severity":1,"message":"203","line":17,"column":41,"nodeType":"201","messageId":"202","endLine":17,"endColumn":43},{"ruleId":"204","severity":1,"message":"205","line":13,"column":7,"nodeType":"206","messageId":"207","endLine":18,"endColumn":15},{"ruleId":"169","severity":1,"message":"208","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":20},{"ruleId":"169","severity":1,"message":"209","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":16},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'setParticlesEffect' is assigned a value but never used.","Identifier","unusedVar","'MobileNav' is defined but never used.","'session' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getErrors'. Either include it or remove the dependency array. If 'getErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["212"],["210"],["211"],["210"],["211"],"'res' is assigned a value but never used.","'removeAffirmation' is defined but never used.","'BubbleInfo' is defined but never used.","'throttling' is defined but never used.","'handleDecreaseTimer' is defined but never used.","'pauseTimer' is defined but never used.","'startTimer' is defined but never used.","'setResult' is assigned a value but never used.","'savedSessionsCounter' is assigned a value but never used.","'requestCounter' is assigned a value but never used.","'setRequestCounter' is assigned a value but never used.","'axiosConfig' is assigned a value but never used.","'req' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Affirmations' is defined but never used.","'redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},"Update the dependencies array to be: [errors, getErrors]",{"range":"215","text":"216"},[692,700],"[errors, getErrors]"]